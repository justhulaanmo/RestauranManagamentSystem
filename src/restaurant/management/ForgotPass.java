package restaurant.management;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

import structure.connectiontodatabase;

public class ForgotPass extends javax.swing.JFrame {

    public ForgotPass() {
        initComponents();
        background.requestFocus();
        setLocationRelativeTo(null);
        
        
        
        username.setText("@");
        username.setForeground(Color.GRAY);
        
        // FocusAdapter is abstract class
        username.addFocusListener(new java.awt.event.FocusAdapter() {
        @Override
        public void focusGained(java.awt.event.FocusEvent evt) {
            if (username.getText().equals("@")) {
                username.setText("@");
                username.setForeground(Color.BLACK);

            }
        }
        @Override
        public void focusLost(java.awt.event.FocusEvent evt) {
            if (username.getText().isEmpty()) {
                username.setText("@");
                username.setForeground(Color.GRAY);   } 
        }
    });
        
    }
    
    private void resetPassword() {
        String user = username.getText().trim();
        String mail = email.getText().trim();
        String newPassword = new String(newpass.getPassword());
        String confirmPassword = new String(conpass.getPassword());


        Connection con = connectiontodatabase.getConnection(); // Your DB connection method
        if (con != null) {
            String query = "SELECT * FROM signup WHERE username = ? AND email = ?";
            try (PreparedStatement pst = con.prepareStatement(query)) {
                pst.setString(1, user);
                pst.setString(2, mail);

                ResultSet rs = pst.executeQuery();
                if (rs.next()) {
                    // User exists, update password
                    String updateQuery = "UPDATE signup SET password = ? WHERE username = ? AND email = ?";
                    try (PreparedStatement updatePst = con.prepareStatement(updateQuery)) {
                        updatePst.setString(1, newPassword);
                        updatePst.setString(2, user);
                        updatePst.setString(3, mail);

                        int rowsUpdated = updatePst.executeUpdate();
                        if (rowsUpdated > 0) {
                            JOptionPane.showMessageDialog(this, "Password reset successfully!");
                            new Login().setVisible(true);
                            dispose();
                        } else {
                            JOptionPane.showMessageDialog(this, "Failed to reset password", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid username or email", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Database error", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Database connection failed", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        newpass = new javax.swing.JPasswordField();
        show1 = new javax.swing.JToggleButton();
        show2 = new javax.swing.JToggleButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        conpass = new javax.swing.JPasswordField();
        changepassword = new javax.swing.JButton();
        error1 = new javax.swing.JLabel();
        error2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cancel = new javax.swing.JButton();
        conpasstxt = new javax.swing.JLabel();
        newpasstxt = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1200, 675));
        setPreferredSize(new java.awt.Dimension(1200, 675));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setText("Username:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, -1, -1));

        username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernameKeyReleased(evt);
            }
        });
        getContentPane().add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 180, 289, 31));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setText("Email:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 240, -1, -1));

        email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailKeyReleased(evt);
            }
        });
        getContentPane().add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 260, 289, 31));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel3.setText("New Password:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 330, -1, -1));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel4.setText("Confirm Password:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 1000, -1, -1));

        jButton1.setText("Confirm");
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 1120, -1, -1));

        newpass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newpassKeyReleased(evt);
            }
        });
        getContentPane().add(newpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 350, 289, 31));

        show1.setText("show");
        show1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show1ActionPerformed(evt);
            }
        });
        getContentPane().add(show1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 350, 70, 30));

        show2.setText("show");
        show2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show2ActionPerformed(evt);
            }
        });
        getContentPane().add(show2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 440, 70, 30));
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(-930, 310, -1, -1));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel6.setText("Confirm Password:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 420, -1, -1));

        conpass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                conpassKeyReleased(evt);
            }
        });
        getContentPane().add(conpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 440, 289, 31));

        changepassword.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        changepassword.setText("CHANGE PASSWORD");
        changepassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changepasswordActionPerformed(evt);
            }
        });
        getContentPane().add(changepassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 540, -1, -1));

        error1.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        error1.setForeground(new java.awt.Color(255, 51, 51));
        getContentPane().add(error1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 210, 80, 20));

        error2.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        error2.setForeground(new java.awt.Color(255, 51, 51));
        getContentPane().add(error2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 290, 80, 20));

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel10.setText("FORGOT PASSWORD");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, -1, -1));

        cancel.setText("cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        getContentPane().add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 580, -1, -1));

        conpasstxt.setFont(new java.awt.Font("Helvetica Neue", 3, 12)); // NOI18N
        conpasstxt.setForeground(new java.awt.Color(255, 51, 51));
        conpasstxt.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        conpasstxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                conpasstxtKeyReleased(evt);
            }
        });
        getContentPane().add(conpasstxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 470, 400, 30));

        newpasstxt.setFont(new java.awt.Font("Helvetica Neue", 3, 12)); // NOI18N
        newpasstxt.setForeground(new java.awt.Color(255, 51, 51));
        newpasstxt.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        newpasstxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newpasstxtKeyReleased(evt);
            }
        });
        getContentPane().add(newpasstxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 380, 400, 30));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/signup (1200 x 675 px) copy.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void show1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show1ActionPerformed
        if (show1.isSelected()) {
        // Show password
        newpass.setEchoChar((char) 0); // Makes the password visible
        show1.setText("Hide");
    } else {
        // Hide password
        newpass.setEchoChar('•'); // Restores the hidden password (you can use '*' or any other character)
        show1.setText("Show");
    }      
    }//GEN-LAST:event_show1ActionPerformed

    private void show2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show2ActionPerformed
       if (show2.isSelected()) {
        // Show password
        conpass.setEchoChar((char) 0); // Makes the password visible
        show2.setText("Hide");
    } else {
        // Hide password
        conpass.setEchoChar('•'); // Restores the hidden password (you can use '*' or any other character)
        show2.setText("Show");
    }      
    }//GEN-LAST:event_show2ActionPerformed

    private void changepasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changepasswordActionPerformed
    String usernamee = username.getText();
    String emaill = email.getText();
    String newPassword = new String(newpass.getPassword());
    String confirmPassword = new String(conpass.getPassword());
    
    resetPassword();
    
            
        if (usernamee.isEmpty() || newPassword.isEmpty() || confirmPassword.isEmpty() || emaill.isEmpty() ){
           JOptionPane.showMessageDialog(this, "PLEASE FILL OUT ALL FIELDS","ERROR",JOptionPane.WARNING_MESSAGE);
           return;
        }
        if      (!usernamee.matches("^@[a-zA-Z0-9._]{0,100}$")
                || newPassword.length() < 6 
                && newPassword.matches("^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@,._])[A-Za-z\\d@,._]{6,255}$")) {
        JOptionPane.showMessageDialog(this, "Please input the correct format in the wrong field.", "ERROR", JOptionPane.WARNING_MESSAGE);
        return;
        }

    if (!newPassword.equals(confirmPassword)) {
        conpasstxt.setText("Passwords do not match");
    } 
    
    
    }//GEN-LAST:event_changepasswordActionPerformed

    private void usernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameKeyReleased
        String PATTERN = "^@[a-zA-Z0-9._]{0,100}$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(username.getText());
        if(!match.matches()){
            error1.setText("Invalid Input");
        }
        else{
            error1.setText(null); 
        } 
    }//GEN-LAST:event_usernameKeyReleased

    private void emailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailKeyReleased
        
        String PATTERN = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,6}$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(email.getText());
        if(!match.matches()){
            error2.setText("Invalid Input");
        }
        else{
            error2.setText(null); 
        }
    }//GEN-LAST:event_emailKeyReleased

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.dispose();
        Login home = new Login();
        home.setVisible(true);
    }//GEN-LAST:event_cancelActionPerformed

    private void conpasstxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_conpasstxtKeyReleased

    }//GEN-LAST:event_conpasstxtKeyReleased

    private void newpasstxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newpasstxtKeyReleased
        
    }//GEN-LAST:event_newpasstxtKeyReleased

    private void newpassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newpassKeyReleased
        
        String PATTERN = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@,._])[A-Za-z\\d@,._]{6,255}$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(newpass.getText());
        if(!match.matches()){
            newpasstxt.setText("Password must include: upper, lower, number & special char");
        }
        else{
            newpasstxt.setText(""); // Clear the error message
        } 
    }//GEN-LAST:event_newpassKeyReleased

    private void conpassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_conpassKeyReleased
       
         String newPassword = new String(newpass.getPassword());
        String confirmPassword = new String(conpass.getPassword());
        
        if (!newPassword.equals(confirmPassword)) {
        conpasstxt.setText("Passwords do not match");
    } 
        else{
            conpasstxt.setText(""); // Clear the error message
        } 
        
    }//GEN-LAST:event_conpassKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgotPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgotPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgotPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgotPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ForgotPass().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton cancel;
    private javax.swing.JButton changepassword;
    private javax.swing.JPasswordField conpass;
    public javax.swing.JLabel conpasstxt;
    private javax.swing.JTextField email;
    private javax.swing.JLabel error1;
    private javax.swing.JLabel error2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPasswordField newpass;
    public javax.swing.JLabel newpasstxt;
    private javax.swing.JToggleButton show1;
    private javax.swing.JToggleButton show2;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
